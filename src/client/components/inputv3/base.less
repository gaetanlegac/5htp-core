@import (reference) "@/client/assets/vars.less";

@hInput: @sizeComponent;

// TODO: Adapter textarea Ã  input/basev2
.contChamp textarea {
    &.bloc { width: 100%; }
    
    resize: none;
    min-height: @hInput;
    padding-top: @spacing * 2 !important;
}

.inputWrapper {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    align-items: stretch;

    > label {
        font-weight: 700;
    }

    > p.hint {
        text-align: left;
        color: var(--cTxtDesc);
    }
}

.input.select {
    
}

.input.text {

    display: flex;
    align-items: center;
    align-items: flex-start;
    padding: @spacing;
    gap: 1em;

    // Inputs don't have to have the same height as the buttons,
    // Since they are not supposed to be on the same row (mobile first design)
    height: @hInput;
    align-items: center;
    
    background: var(--cBg);
    border-radius: @radius;
    transition: background .1s linear;

    > i {
        color: var(--cTxtDesc);
    }

    &:hover {
        background: var(--cBgActive);
    }

    &.focus {
        background: #fff;
        box-shadow: 1px 3px 0 fade(#000,4%), 0 1px 2px 0 fade(#000,2%);
    }

    @gapAround: @spacing;
    > .btn:first-child { margin-left: 0 - @gapAround / 2; }

    .contValue {
        position: relative;
        flex: 1;

        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: @spacing / 2;

        &, * {
            cursor: text;
        }
    }

    input, 
    textarea {
        background: transparent;
        border: none;
        font-family: inherit;
        width: 100%;
        padding: 0;
        font-size: 1rem;
        color: inherit;
    }

    input {
        height: 2.5em;
    }

    &.multiline {
        height: auto;
    }

    textarea {
        padding: 0;
        min-height: 6em;
    }
}