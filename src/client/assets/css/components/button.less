/*----------------------------------
- CONFIG
----------------------------------*/

@sizeActiveIndicator: 0.3rem;

/*----------------------------------
- BUTTON
----------------------------------*/
.btn {

    // Layout
    position: relative;
    gap: @spacing;
    min-width: 0/*fit-content*/; // Fit content, even when flexbox parent width < content width
 
    // Dimensions
    font-size: 1em;
    padding: 0 1.5em;
    height: @sizeComponent;

    // Shape
    border-radius: @radius;
    border: none;

    // Text
    text-decoration: none;
    font-weight: 500;

    // Colors
    // NOTE: transparent by default (menu items, etc..)
    background: transparent;
    color: var(--cTxtAccent);  
        
    // Hover
    //transition: all .5s linear;
    &:hover,
    li:hover > & {

        color: var(--cTxtImportant);
        //transition: all .1s linear;
        
        > i {
            color: var(--cAccent)
        }
    }

    &.active {
        &::after {
            content: ' ';
            display: block;
            position: absolute;

            background: @c1;
            height: @sizeActiveIndicator;
            width: @sizeActiveIndicator;
            border-radius: 50%;

            // Default: bottom
            left: 50%;
            margin-left: -@sizeActiveIndicator / 2;
            bottom: -@sizeActiveIndicator / 2;
        }

        .col > &::after,
        .col > li > &::after {

            // Reset potition
            left: auto;
            margin-left: auto;
            bottom: auto;

            // Position right
            top: 50%;
            margin-top: -@sizeActiveIndicator / 2;
            right: -@sizeActiveIndicator / 2;
        }
    }

    // Click
    &.pressed {
        transform: scale(0.9);
    }

    &,
    > .label {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /*----------------------------------
    - CONTENT
    ----------------------------------*/

    > .label {
        text-align: left;
        gap: @spacing / 2;
        font-size: 1rem;
        line-height: 1.5em;
        z-index: 1; // Make the label on top of ::before for example

        // Handle overflow
        //white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;

        li > & {
            flex: 1;
        }
    }

    > i {
        font-size: 1.2em;
        color: inherit;
    }

    > img {

        max-width: 100%;
        max-height: 100%;

    }

    /*----------------------------------
    - THEME
    ----------------------------------*/

    &.bg {
        
        &:not(:disabled) {
            &:hover,
            li:hover > & {
                background: var(--cBgActive);
            }
        }

        &:disabled {
            opacity: 0.5;
        }

        strong {
            color: var(--cTxtImportant);
        }

        > i {
            color: inherit;
        }

    }

    /*----------------------------------
    - STATE
    ----------------------------------*/

    cursor: pointer;

    &:not(.primary).active {

        &.col {
            box-shadow: 0 0 0 0.2em @c2;
        }
    }

    &[disabled] {
        cursor: default;
        opacity: 0.5;
    }

    /*----------------------------------
    - DISPLAY MODES
    ----------------------------------*/

    &.col {
        height: auto;
        padding: @spacing * 1.25 @spacing;
        align-items: center;

        > .label {
            flex-direction: column;

            white-space: normal;
            text-align: center;
        }
    }

    &.icon {

        // La taille doit être autmatquement proportionnelle grace au padding
        // WARN: Pourquoi au fait ?
        padding: 0!important;
        min-width: @sizeComponent;

        &.round {
            border-radius: 50%;
        }
    }

    &.pill {
        border-radius: @sizeComponent / 2;
    }

    &.link {
        height: auto;
        width: auto;
        padding: 0;

        &, 
        &:hover {
            background: none;
            box-shadow: none;
        }
    }

    &.h-a {
        padding: 2em;

        > .label {
            white-space: normal;
        }
    }
}

/*----------------------------------
- BUTTON IN LISTS
----------------------------------*/

.menu > .btn, 
.menu > li > .btn {

    // Give less imortance to buttons which are in lists
    color: var(--cTxtBase);  
    box-shadow: none;
    //width: 100%;

    &.active,
    &:hover {
        background: var(--cBgActive);
        color: var(--cTxtImportant);
    }

    > .label {
        // All the list items label must be aligned
        justify-content: flex-start;
        // Since they're all horizontally aligned,
        // Label = max width, so icon right are also aligned to right
        flex: 1;
    }

    &.icon {

        color: var(--cTxtDesc);

        > .label {

            visibility: hidden;
            position: absolute;
            
            background: #111;
            
            height: @sizeComponent;
            line-height: @sizeComponent;
            padding: 0 @spacing * 2;
            border-radius: @radius;
            
            color: #fff;
            white-space: nowrap; // Autrement, si plusieurs mots, affiché sur plusieurs ligne
        }

        &:not([disabled]):hover > .label {
            visibility: visible;
        }
    }
}

ul.col,
ul.row {

    .btn.icon > .label,
    > li > .btn + .menu {
        position: absolute;
    }


    > li {

        position: relative;

        // Submenu
        &:not(.contPopover):not(:hover) > .btn + .submenu,
        > .btn[disabled] + .submenu {
            visibility: hidden;
        }
    }

    &.menu > li {
        &:hover > .btn:not([disabled]):hover > .label {
            visibility: visible;
        }
    }

}

ul.col {

    &.menu > .btn, 
    &.menu > li > .btn {
        
        // Align items ver sla gauche
        justify-content: flex-start;
        
        // Align all icons by giveing them the same width
        > i {
            flex: 0 0 24px;
        }

        &.icon {
            width: @sizeComponent;
            padding: 0;
            justify-content: center;

            > .label {
                .row > li > & {
                    bottom: 100%;
                    left: 50%;
                    margin-bottom: @spacing / 2;
                    transform: translateX(-50%);
                }
            }
    
            &:not([disabled]):hover > .label {
                visibility: visible;
            }
        }
    }

    &.menu > li > .btn {
        width: 100%;
    }

    .btn.icon > .label,
    > li > .btn + .submenu {
        left: 100%;
        margin-left: @spacing;
    }

    > li {

        // Sous le label quand bouton = icone seulement
        > .btn + .menu {

            top: @sizeComponent;
            margin-top: @spacing / 2;

            &::before {
                content: ' ';
                display: block;
                position: absolute;

                top: -@sizeComponent;
                left: calc(0em - @spacing);
                right: calc(0em - @spacing);

                height: 100%;
            }
            
        }
    }


    // Put the hover buggle at the left, instead of the right
    &.bubble-left {

        .btn.icon > .label,
        > li > .btn + .submenu {
            left: auto;
            margin-left: 0;
            right: 100%;
            margin-right: @spacing;
        }
    }
}

// Submenu
ul.row {

    .btn.icon > .label,
    > li > .btn + .submenu {
        bottom: 100%;
        margin-bottom: 0; // User's mouse shouldnt go outside the li so the hover state is not lost
    }

    > li > .btn + .submenu.pos-bottom {
        bottom: auto;
        top: 100%;
        margin-top: 0; // User's mouse shouldnt go outside the li so the hover state is not lost
    }
}